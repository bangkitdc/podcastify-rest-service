version: '3.8'
services:
  podcastify-rest-service-app:
    container_name: podcastify-rest-service-app
    hostname: podcastify-rest-service-app
    build: .
    volumes:
      - ./src:/app/src
    env_file:
      - .env
    ports:
      - '4444:4444'
    networks:
      - podcastify-rest
    depends_on:
      podcastify-rest-service-db:
        condition: service_healthy
      podcastify-rest-service-cache:
        condition: service_started

  podcastify-rest-service-db:
    container_name: podcastify-rest-service-db
    image: postgres:13.9-alpine3.17
    hostname: podcastify-rest-service-db
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: 10s
      timeout: 3s
      retries: 5
    env_file:
      - .env
    ports:
      - 5432:5432
    networks:
      - podcastify-rest

  podcastify-rest-service-cache:
    image: redis:alpine3.17
    container_name: podcastify-rest-service-cache
    hostname: podcastify-rest-service-cache
    volumes:
      - ./cache:/data
    env_file:
      - .env
    ports:
      - 6379:6379
    networks:
      - podcastify-rest
    command: redis-server --requirepass ${REDIS_PASSWORD}

volumes:
  pgdata:
    driver: local
  cache:
    driver: local

networks:
  podcastify-rest:
